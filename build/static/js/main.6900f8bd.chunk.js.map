{"version":3,"sources":["themes/movieTheme.js","components/MovieListItem/MovieListItem.js","components/MovieList/MovieList.js","components/Detail/Detail.js","components/Edit/Edit.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["styles","theme","screenBackground","backgroundColor","width","height","hero","position","margin","blurredCover","top","right","backgroundSize","marginTop","infoSection","display","alignItems","background","zIndex","leftMovieInfoContainer","maxWidth","marginBottom","miviLogo","transition","font","color","title","textTransform","iconButton","description","lineHeight","minHeight","directedTimeGenres","directedTimeGenresClose","director","durationIcon","paddingRight","duration","padding","genre","border","marginRight","rightMovieInfoContainer","bottom","rating","flex","gridList","transform","flexWrap","trailerContainer","marginLeft","trailer","moviePoster","paddingTop","MovieListItem","Component","clickhandler","this","props","history","push","movieItem","id","dispatch","type","payload","render","classes","className","src","poster","onClick","handleMovieItemClicked","withStyles","connect","reduxState","MovieList","state","cover","genres","trailerMode","show","setState","toggleTrailerMode","componentDidMount","cascade","key","aria-label","map","index","left","opposite","when","allowfullscreen","frameborder","replace","style","backgroundImage","cols","cellHeight","movies","handleFade","Detail","match","params","editClicked","backClicked","details","array_agg","variant","Edit","saveChangesClicked","event","console","log","newDetails","cancelClicked","textInput","propertyName","target","value","placeholder","onChange","label","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","getMovies","editMovies","rootSaga","axios","get","response","data","put","action","takeEvery","sagaMiddleware","createSagaMiddleware","storeInstance","createStore","combineReducers","applyMiddleware","logger","run","ReactDOM","store","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6900f8bd.chunk.js","sourcesContent":["const styles = (theme) => ({\n  screenBackground: {\n    backgroundColor: '#010102',\n    width: '101%',\n    height: '106vh',\n  },\n  hero: {\n    position: 'relative',\n    height: '60vh',\n    margin: '-1.5% 0% 1.5% 0%',\n    width: '100%',\n  },\n  blurredCover: {\n    position: 'absolute',\n    top: 0,\n    height: '56vh',\n    right: 0,\n    backgroundSize: 'cover',\n    // backgroundRepeat: 'no-repeat',\n    marginTop: '2%',\n    width: '65%',\n  },\n  infoSection: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    height: '60vh',\n    background:\n      'linear-gradient(to right, rgba(0,0,0,2) 34%, transparent 100%)',\n    zIndex: 2,\n    marginTop: '-4%',\n  },\n  leftMovieInfoContainer: {\n    position: 'relative',\n    maxWidth: '60%',\n    'text-align': 'left',\n    marginBottom: '-5%',\n  },\n  miviLogo: {\n    transition: '.5s',\n    margin: '2% 0% -7% -.5%',\n    font: '300 220% Roboto, sans-serif',\n    color: '#e50a15',\n    'letter-spacing': '-1.5px',\n  },\n  title: {\n    transition: '.5s',\n    maxWidth: '80%',\n    textTransform: 'uppercase',\n    margin: '3% 0% -6% 0%',\n    font: '400 170% Roboto, sans-serif',\n    'letter-spacing': '-.5px',\n    color: '#fff',\n  },\n  iconButton: {\n    'font-size': '40px',\n    marginBottom: '10%',\n    color: '#fff',\n    '&:hover': {\n      transition: '.5s',\n      color: '#e50a15',\n    },\n  },\n  description: {\n    marginTop: '0%',\n    marginBottom: '-10%',\n    color: '#fff',\n    lineHeight: 1.4,\n    minHeight: '25vh',\n    // 'word-spacing': '1px',\n    'letter-spacing': '.5px',\n    maxWidth: '70%',\n    font: '300 90% Roboto, sans-serif',\n  },\n  directedTimeGenres: {\n    margin: '-8% 0% 8% 0%',\n    width: '110%',\n  },\n  directedTimeGenresClose: {\n    margin: '-8% 0% 8% 0%',\n    width: '110%',\n  },\n  director: {\n    color: 'white',\n    font: '300 100% Roboto, sans-serif',\n    marginTop: '-3%',\n    display: 'inline-block',\n  },\n  durationIcon: {\n    'font-size': '20px',\n    paddingRight: '3%',\n    margin: '0% 5% -6% -50%',\n    color: '#fff',\n  },\n  duration: {\n    display: 'inline-block',\n    padding: '3%',\n    margin: '3% -2% 0% 3%',\n    font: '300 90% Roboto, sans-serif',\n    color: '#fff',\n  },\n  genre: {\n    display: 'inline-block',\n    color: '#fff',\n    border: '1px solid rgba(255,255,255,0.13)',\n    padding: '1%',\n    font: '300 90% Roboto, sans-serif',\n    marginRight: '2%',\n  },\n\n  rightMovieInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    right: 20,\n    display: 'flex',\n    zIndex: 100,\n  },\n  // genreSelector: {\n  //   // marginTop: '-30%',\n  //   display: 'inline-block',\n  //   flex: 1,\n  // },\n  rating: {\n    color: '#fff',\n    font: '500 120% Roboto, sans-serif',\n    'letter-spacing': '1px',\n    flex: 1,\n    zIndex: 0,\n  },\n  // grid: { height: '25%' },\n  gridList: {\n    transform: 'translateZ(0)',\n    flexWrap: 'nowrap',\n  },\n  trailerContainer: {\n    position: 'relative',\n    marginTop: '-41.5%',\n    marginLeft: '76%',\n    zIndex: 300,\n  },\n  trailer: {\n    width: '90vh',\n    height: '50vh',\n  },\n  moviePoster: {\n    width: '100%',\n    height: '37vh',\n    paddingTop: '0',\n    marginBottom: '1%',\n    border: '2px solid #040303',\n    transition: '.5s',\n    '&:hover': {\n      transition: '.3s',\n      'box-shadow': ' -1px 1px 35px -17px rgba(255,255,255,1)',\n      border: '2px solid white',\n      transform: 'scale(1.07)',\n    },\n  },\n});\nexport default styles;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from '../../themes/movieTheme';\nimport { withStyles } from '@material-ui/core';\nclass MovieListItem extends Component {\n  clickhandler = () => {\n    // change the page to the Details/movieID url\n    this.props.history.push(`/Detail/${this.props.movieItem.id}`);\n    // changed this :this.props.history.push('/Detail/${id}') to whats on top to specify the actual id\n    // dispatch the selected movie (the one that's clicked on) to your \"details\" redux state\n    this.props.dispatch({\n      type: 'FETCH_DETAIL',\n      payload: this.props.movieItem,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className=\"movieContainer\">\n        <img\n          src={this.props.movieItem.poster}\n          onClick={() => {\n            this.props.handleMovieItemClicked(this.props.movieItem);\n            // this.clickhandler(); //enabling this functions allows us to view and edit each movie's info\n          }}\n          className={classes.moviePoster}\n        ></img>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (reduxState) => ({\n  reduxState,\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(MovieListItem));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  GridList,\n  GridListTile,\n  withStyles,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\nimport MovieListItem from '../MovieListItem/MovieListItem';\nimport styles from '../../themes/movieTheme';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Fade from 'react-reveal/Fade';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport CancelIcon from '@material-ui/icons/Cancel';\n// import { Roll, Zoom, Rotate, Flip } from 'react-reveal';\n\nclass MovieList extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_MOVIES' });\n  }\n  state = {\n    title: '007 Collection',\n    poster: 'images/jamesBondPoster.png',\n    description:\n      'The James Bond series produced by Eon Productions, starring Sean Connery as the fictional MI6 agent James Bond. It is based on the novel of the same name by Ian Fleming. The film also stars Honor Blackman as Bond girl Pussy Galore and Gert Fröbe as the title character Auric Goldfinger, along with Shirley Eaton as the iconic Bond girl Jill Masterson. Goldfinger was produced by Albert R. Broccoli and Harry Saltzman and was the first of four Bond films directed by Guy Hamilton.',\n    cover: 'images/jamesBondCover.jpg',\n    trailer: 'https://www.youtube.com/watch?v=F208Zc4pXbk',\n    director: 'Sam Mendes',\n    duration: '2h 43m',\n    rating: 'R',\n    genres: ['Adventure', 'Drama', 'Action'],\n    trailerMode: false,\n    show: false,\n  };\n  handleMovieItemClicked = (movieItem) => {\n    this.setState({\n      id: movieItem.id,\n      title: movieItem.title,\n      poster: movieItem.poster,\n      description: movieItem.description,\n      cover: movieItem.cover,\n      trailer: movieItem.trailer,\n      director: movieItem.director,\n      duration: movieItem.duration,\n      rating: movieItem.rating,\n      genres: movieItem.genres,\n    });\n    // console.log('handleMovieItemClicked was clicked! movieItem:', movieItem);\n  };\n  toggleTrailerMode = () => {\n    this.setState({\n      trailerMode: !this.state.trailerMode,\n      show: !this.state.show,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.screenBackground}>\n        <div className={classes.hero}>\n          <div className={classes.infoSection}>\n            <header className={classes.leftMovieInfoContainer}>\n              <Fade top cascade>\n                <p className={classes.miviLogo}>MIVI</p>\n              </Fade>\n              <Fade key={this.state.id}>\n                <Typography className={classes.title}>\n                  {this.state.title}{' '}\n                  {this.state.trailerMode ? (\n                    <IconButton\n                      aria-label=\"close movie trailer\"\n                      onClick={this.toggleTrailerMode}\n                      title=\"close movie trailer\"\n                    >\n                      <CancelIcon className={classes.iconButton} title=\"Demo\" />\n                    </IconButton>\n                  ) : (\n                    <IconButton\n                      aria-label=\"play movie trailer\"\n                      onClick={this.toggleTrailerMode}\n                      title=\"play movie trailer\"\n                    >\n                      <PlayCircleFilledIcon className={classes.iconButton} />\n                    </IconButton>\n                  )}\n                </Typography>\n                <Typography className={classes.description}>\n                  {/* {textTruncate(movie.description, 450)} */}{' '}\n                  {this.state.description}\n                </Typography>\n                <div\n                  className={\n                    this.state.trailerMode\n                      ? classes.directedTimeGenresClose\n                      : classes.directedTimeGenres\n                  }\n                >\n                  {' '}\n                  <Typography className={classes.director}>\n                    Directed By {this.state.director}\n                  </Typography>\n                  <Typography className={classes.duration}>\n                    <AccessTimeIcon className={classes.durationIcon} />\n                    {this.state.duration}\n                  </Typography>{' '}\n                  {/*  In postgreSQL I used json_agg to receive an array of\n                  genres: [], and then I mapped them out, not an object: {} */}\n                  {this.state.genres === []\n                    ? 'please wait..'\n                    : this.state.genres.map((genre, index) => (\n                        <Typography className={classes.genre} key={index}>\n                          {genre}\n                        </Typography>\n                      ))}{' '}\n                  <Fade left opposite when={this.state.show}>\n                    <div className={classes.trailerContainer} allowfullscreen>\n                      <iframe\n                        title={`${this.state.title} movie trailer`}\n                        frameborder=\"0\"\n                        // diable={true}\n                        // style=\"display:none;\"\n                        className={classes.trailer}\n                        // I emptied out the source in case anyone was to hover over the hidden video\n                        src={\n                          this.state.trailerMode\n                            ? this.state.trailer.replace('watch?v=', 'embed/')\n                            : ''\n                        }\n                      ></iframe>\n                    </div>{' '}\n                  </Fade>\n                </div>\n              </Fade>\n            </header>{' '}\n          </div>{' '}\n          <Fade key={this.state.id}>\n            <div\n              className={classes.blurredCover}\n              style={{\n                backgroundImage: `url(${this.state.cover})`,\n              }}\n            />{' '}\n          </Fade>\n          <Fade key={this.state.id} when={this.state.show === false}>\n            <div className={classes.rightMovieInfoContainer}>\n              <Typography className={classes.rating}>\n                {this.state.rating}\n              </Typography>{' '}\n            </div>\n          </Fade>\n        </div>\n        <GridList className={classes.gridList} cols={6.3} cellHeight={'100%'}>\n          {this.props.reduxState.movies === []\n            ? 'please wait..'\n            : this.props.reduxState.movies.map((movieItem, index) => (\n                <GridListTile onClick={this.handleFade}>\n                  <Fade>\n                    <MovieListItem\n                      key={index}\n                      history={this.props.history}\n                      movieItem={movieItem}\n                      handleMovieItemClicked={this.handleMovieItemClicked}\n                    />{' '}\n                  </Fade>\n                </GridListTile>\n              ))}\n        </GridList>\n        {/* <pre>{JSON.stringify(this.props.reduxState.searchName)}</pre> */}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (reduxState) => ({\n  reduxState,\n});\nexport default withStyles(styles)(connect(mapStateToProps)(MovieList));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport Fade from 'react-reveal/Fade';\n\nclass Detail extends Component {\n  state = {\n    id: this.props.match.params.id,\n  };\n\n  editClicked = () => {\n    this.props.history.push(`/Edit/${this.state.id}`);\n    // changed this :this.props.history.push('/Detail/${id}') to whats on top to specify the actual id\n  };\n  backClicked = () => {\n    this.props.history.push(`/`);\n    // changed this :this.props.history.push('/Detail/${id}') to whats on top to specify the actual id\n  };\n\n  render() {\n    return (\n      <Fade left>\n        <div>\n          {/* Examples of conditional rendering: */}\n          {/* {this.props.reduxState.details.title !== '' ? 'error' : 'okay'} */}\n          {/* {this.props.reduxState.details.title !== undefined ? 'error' : 'okay'} */}\n\n          {/* We used the above two steps to test if details was coming back from the server with something */}\n          {/* <pre>{JSON.stringify(this.props.match.params.id)}</pre> */}\n          {/* <pre>{JSON.stringify(this.props.reduxState.details)}</pre> */}\n\n          {/* <button onClick={} */}\n          {/* {this.props.reduxState.details.map((movieDetails, arraySpot) => ( */}\n          {/* {this.props.reduxState.details.title !== undefined ? (\n            'error'\n          ) : ( */}\n          <tr>\n            <td>\n              <img src={this.props.reduxState.details.poster}></img>\n              <h4>{this.props.reduxState.details.title}</h4>\n              {/* <p>{this.props.reduxState.details.array_agg}</p> */}\n\n              {/* {this.props.reduxState.details.array_agg.map((genre, index) => (\n                <pre key={index}>{genre}</pre>\n              ))} */}\n              <p>{this.props.reduxState.details.array_agg} </p>\n\n              <p>{this.props.reduxState.details.description}</p>\n\n              <Button\n                className=\"Button\"\n                variant=\"contained\"\n                onClick={this.backClicked}\n              >\n                BACK\n              </Button>\n              <span className=\"ButtonContainer\">\n                <Button\n                  className=\"Button\"\n                  variant=\"contained\"\n                  onClick={this.editClicked}\n                >\n                  Edit\n                </Button>\n              </span>\n            </td>\n          </tr>\n          {/* )} */}\n          {/* <button onClick={this.handleEdit}>Edit Information</button> */}\n          {/* </span> */}\n        </div>\n      </Fade>\n    );\n  }\n}\n\nconst putReduxStateOnProps = (reduxState) => ({\n  reduxState,\n});\n\nexport default connect(putReduxStateOnProps)(Detail);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass Edit extends Component {\n  state = {\n    title: '',\n    description: '',\n    id: this.props.match.params.id,\n  };\n\n  saveChangesClicked = (event) => {\n    console.log('In Save Changes clicked');\n    console.log('this.state', this.state);\n\n    // this.props.dispatch({action}) action is an action.object\n\n    this.props.dispatch({\n      type: 'FETCH_EDIT',\n      payload: {\n        id: this.state.id,\n        title: this.state.title,\n        description: this.state.description,\n      },\n      newDetails: {\n        poster: this.props.reduxState.details.poster,\n        id: this.state.id,\n        title: this.state.title,\n        description: this.state.description,\n        array_agg: this.props.reduxState.details.array_agg,\n      },\n    });\n\n    // this.props.history.push is going to bring\n    // the user into the next part of the feedback form (understanding)\n    // which is a route listed within App.js's router\n\n    this.props.history.push(`/Detail/${this.props.match.params.id}`);\n  }; // end nextClicked\n\n  cancelClicked = (event) => {\n    console.log('In Cancel clicked');\n\n    // this.props.dispatch({\n    //   type: 'SET_MOVIES',\n    //   payload: this.props.details,\n    // });\n\n    // this.props.history.path is going to bring\n    // the user into the next part of the feedback form (understanding)\n    // which is a route listed within App.js's router\n    // this.props.history.push(`/Detail/${this.props.movieItem.id}`);\n    this.props.history.push(`/Detail/${this.props.reduxState.details.id}`);\n  };\n\n  textInput = (event, propertyName) => {\n    console.log('in textInput, value:', event.target.value);\n\n    // this.setState sets the state's comment property = to the user's input\n    this.setState({\n      ...this.state,\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <img src={this.props.reduxState.details.poster}></img>\n        <br></br>\n        <TextField\n          placeholder=\"Title\"\n          // defaultValue={this.props.reduxState.details.title}\n          onChange={(event) => this.textInput(event, 'title')}\n          label=\"Title\"\n          variant=\"filled\"\n          id=\"filled-basic\"\n        ></TextField>\n        <br></br>\n        <TextField\n          placeholder=\"Description\"\n          // defaultValue={this.props.reduxState.details.description}\n          onChange={(event) => this.textInput(event, 'description')}\n          label=\"Description\"\n          variant=\"filled\"\n          id=\"filled-basic\"\n        ></TextField>\n        <br></br>\n        <br></br>\n        <Button\n          variant=\"contained\"\n          onClick={(event) => this.cancelClicked(event, 'title')}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={(event) => this.saveChangesClicked(event, 'title')}\n        >\n          Save Changes\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst putReduxStateOnProps = (reduxState) => ({\n  reduxState,\n});\n\nexport default connect(putReduxStateOnProps)(Edit);\n","import React, { Component } from 'react';\nimport './App.css';\nimport MovieList from '../MovieList/MovieList';\nimport {\n  HashRouter as Router,\n  Route,\n  // Link\n} from 'react-router-dom';\nimport Detail from '../Detail/Detail.js';\nimport Edit from '../Edit/Edit.js';\n\nclass App extends Component {\n  // Renders the entire app on the DOM\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <nav>{/* <Link to=\"/\">Home</Link> */}</nav>\n          <Route exact path=\"/\" component={MovieList} />\n          <Route path=\"/detail/:id\" component={Detail} />\n          <Route path=\"/edit/:id\" component={Edit} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\n// Provider allows us to use redux within our react app\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport axios from 'axios'; // end imports\nimport { takeEvery, put } from 'redux-saga/effects';\n// Import saga middleware\nimport createSagaMiddleware from 'redux-saga';\n\nfunction* getMovies() {\n  try {\n    const response = yield axios.get('/api/display');\n    yield console.log('This is what we get from axios.get: ', response.data);\n    yield put({ type: 'SET_MOVIES', payload: response.data });\n  } catch (error) {\n    console.log('Trouble getting movies to display', error);\n  }\n}\n// function* detailMovies(action) {\n//   // make sure to put action up top because we are passing i5 through detailMovies\n//   try {\n//     console.log(`this is action.payload in detailMovies:${action.payload}`);\n\n//     const response = yield axios.get(`/api/display/detail/${action.payload}`);\n//     //   Changed the bottom for the top\n//     // const response = yield axios.get(\n//     //     `/api/display/detail/:id`\n//     //   );\n//     yield console.log('This is what we get from axios.get: ', response.data);\n//     yield put({ type: 'DETAIL_MOVIE', payload: response.data });\n//   } catch (error) {\n//     console.log('Trouble getting movie details to display', error);\n//   }\n// }\n\nfunction* editMovies(action) {\n  // make sure to put action up top because we are passing i5 through detailMovies\n  //   try {\n  //     console.log(`this is action.payload in editMovies:${action.payload}`);\n\n  //     const response = yield axios.get(`/api/display/edit/${action.payload}`);\n  //     //   Changed the bottom for the top\n  //     // const response = yield axios.get(\n  //     //     `/api/display/detail/:id`\n  //     //   );\n  //     yield console.log('This is what we get from axios.get: ', response.data);\n  //     yield put({ type: 'EDIT_MOVIE', payload: response.data });\n  //   } catch (error) {\n  //     console.log('Trouble getting movie details to display', error);\n  //   }\n  // }\n  try {\n    yield axios.put('/api/display', action.payload);\n    yield put({ type: 'FETCH_DETAIL', payload: action.newDetails });\n    // // this is all the usual steps we had in the get movies's try\n    // const response = yield axios.get('/api/display');\n    // yield console.log('This is what we get from axios.get: ', response.data);\n    // yield put({ type: 'SET_MOVIES', payload: response.data });\n  } catch (err) {\n    console.log('error', err);\n  }\n}\n\n// Create the rootSaga generator function\nfunction* rootSaga() {\n  yield takeEvery('FETCH_MOVIES', getMovies);\n  // yield takeEvery('FETCH_DETAIL', detailMovies);\n  yield takeEvery('FETCH_EDIT', editMovies);\n}\n\n// ------------ THESE ARE OUR REDUCERS --------------\n\n// Used to store movies returned from the server\nconst movies = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_MOVIES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// Used to store the movie genres\nconst genres = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_GENRES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst details = (state = [], action) => {\n  console.log('in details', state, action.payload);\n  switch (action.type) {\n    case 'FETCH_DETAIL':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst edits = (state = [], action) => {\n  console.log('in details', state, action.type);\n\n  switch (action.type) {\n    case 'EDIT_MOVIE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// Create sagaMiddleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// Create one store that all components can use\nconst storeInstance = createStore(\n  combineReducers({\n    movies,\n    genres,\n    details,\n  }),\n  // Add sagaMiddleware to our store\n  applyMiddleware(sagaMiddleware, logger)\n);\n\n// Pass rootSaga into our sagaMiddleware\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={storeInstance}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}